"""
길이가 N인 수식이 있다. 수식은 0보다 크거나 같고, 9보다 작거나 같은 정수와 연산자(+, -, ×)로 이루어져 있다.
연산자 우선순위는 모두 동일하기 때문에, 수식을 계산할 때는 왼쪽에서부터 순서대로 계산해야 한다. 예를 들어, 3+8×7-9×2의 결과는 136이다.

수식에 괄호를 추가하면, 괄호 안에 들어있는 식은 먼저 계산해야 한다. 단, 괄호 안에는 연산자가 하나만 들어 있어야 한다.
예를 들어, 3+8×7-9×2에 괄호를 3+(8×7)-(9×2)와 같이 추가했으면, 식의 결과는 41이 된다. 하지만, 중첩된 괄호는 사용할 수 없다.
즉, 3+((8×7)-9)×2, 3+((8×7)-(9×2))은 모두 괄호 안에 괄호가 있기 때문에, 올바른 식이 아니다.

수식이 주어졌을 때, 괄호를 적절히 추가해 만들 수 있는 식의 결과의 최댓값을 구하는 프로그램을 작성하시오. 추가하는 괄호 개수의 제한은 없으며, 추가하지 않아도 된다.

첫째 줄에 수식의 길이 N(1 ≤ N ≤ 19)가 주어진다. 둘째 줄에는 수식이 주어진다. 수식에 포함된 정수는 모두 0보다 크거나 같고, 9보다 작거나 같다.
문자열은 정수로 시작하고, 연산자와 정수가 번갈아가면서 나온다. 연산자는 +, -, * 중 하나이다. 여기서 *는 곱하기 연산을 나타내는 × 연산이다. 항상 올바른 수식만 주어지기 때문에, N은 홀수이다.
"""

"""
Brute force Problem 
DFS - Depth First Search

브루트포스 : 조합 가능한 모든 문자열을 하나씩 대입해 보는 방식으로 암호 해독하는 법 => 이산수학, 수리논리학
브루트 포스 공격 또는 키 전수조사 무차별 대입 공격으로 불린다. 수 대입 노가다의 학술적 버전이다.
* DES: Data Encryption Standard : 블록암호기법을 사용해 파이스텔 네트워크를 거쳐 암호화 수행 => 브루트 포스로 풀린다64 바이트
* AES: Advanced Encryption Standard : 고급 암호화 표준 대칭키를 쓰는 블럭 암호 레인달 알고리즘 중에 암호화 블럭 크기가 128비트인 것
경우의 수가 매우 커지면 복잡도가 매우 높아짐
수학적으로 반례를 찾거나 역으로 일정 범위 내에 반례가 없음을 보이기 위해서도 사용된다. 4색정리가 이 방법으로 증명되었다.

"""

"""
9
3+8*7-9*2
"""
exp_len = int(input())
exp = input()

op_num = exp_len/2

def cal(a, b, op):
    if op== '+': return int(a) + int(b)
    elif op == '-': return int(a) - int(b)
    elif op == '*': return int(a)*int(b)
    else: return "wrong operation!"

def dfs():
    pass



